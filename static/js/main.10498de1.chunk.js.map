{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressedStatus","handleDocumentClick","e","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,GACZC,eAAe,GAHnB,EAcEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZJ,WAAuB,MAAVG,EAAEE,IACX,QADQ,UAELF,EAAEE,KACTJ,eAAe,KAnBrB,uDAME,WACEK,SAASC,iBAAiB,QAASC,KAAKN,uBAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAX/C,oBAuBE,WACE,MAAsCM,KAAKT,MAAnCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAa,oCACmBD,EADnB,MAEV,kCA/Bd,GAAyBW,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.10498de1.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n  pressedStatus: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n    pressedStatus: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentClick);\n  }\n\n  handleDocumentClick = (e: KeyboardEvent) => {\n    this.setState({\n      pressedKey: (e.key === ' ')\n        ? 'Space'\n        : `${e.key}`,\n      pressedStatus: true,\n    });\n  };\n\n  render() {\n    const { pressedKey, pressedStatus } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedStatus\n            ? `The last pressed key is [ ${pressedKey} ]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}